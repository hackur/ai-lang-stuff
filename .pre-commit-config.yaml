repos:
  # Ruff - Fast Python linter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.9
    hooks:
      # Run the linter
      - id: ruff
        args: [ --fix ]
      # Run the formatter
      - id: ruff-format

  # Black - Python code formatter (backup)
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        language_version: python3.12

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.2
    hooks:
      - id: mypy
        additional_dependencies:
          - types-PyYAML
          - types-requests
        args: [--install-types, --non-interactive, --ignore-missing-imports]
        exclude: ^(tests/|examples/)

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # Prevent giant files from being committed
      - id: check-added-large-files
        args: ['--maxkb=10000']
      # Check for files that would conflict in case-insensitive filesystems
      - id: check-case-conflict
      # Ensure files end with a newline
      - id: end-of-file-fixer
      # Prevent committing to main/master
      - id: no-commit-to-branch
        args: ['--branch', 'main']
      # Trim trailing whitespace
      - id: trailing-whitespace
      # Check YAML files are valid
      - id: check-yaml
      # Check TOML files are valid
      - id: check-toml
      # Check JSON files are valid
      - id: check-json
      # Detect private keys
      - id: detect-private-key
      # Check for merge conflicts
      - id: check-merge-conflict
      # Check for debugger imports
      - id: debug-statements

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.10
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']
        exclude: ^tests/

  # Check requirements.txt files
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-ast  # Check Python syntax
      - id: check-builtin-literals  # Require literal syntax
      - id: check-docstring-first  # Checks for docstrings

  # Markdown linting (disabled - requires Ruby)
  # - repo: https://github.com/markdownlint/markdownlint
  #   rev: v0.12.0
  #   hooks:
  #     - id: markdownlint
  #       args: ['--fix']
  #       exclude: ^.claude/

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck

# Global configuration
default_language_version:
  python: python3.12

# Files to exclude from all hooks
exclude: |
  (?x)^(
      \.venv/.*|
      \.git/.*|
      __pycache__/.*|
      \.pytest_cache/.*|
      \.mypy_cache/.*|
      \.ruff_cache/.*|
      htmlcov/.*|
      site/.*|
      .*\.egg-info/.*
  )$

# CI configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [mypy]  # Skip mypy in CI (run in separate workflow)
  submodules: false
